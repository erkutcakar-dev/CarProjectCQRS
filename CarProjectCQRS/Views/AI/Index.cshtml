@model IEnumerable<CarProjectCQRS.Entities.Car>

@{
    ViewData["Title"] = "AI Car Search & Recommendation";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-xxl flex-grow-1 container-p-y">
    <h4 class="fw-bold py-3 mb-4">
        <span class="text-muted fw-light">Dashboard /</span> AI Car Search & Recommendation
    </h4>

    <!-- AI Recommendation Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="bx bx-brain me-2"></i>AI Car Recommendation
                    </h5>
                    <span class="badge bg-primary">Powered by AI</span>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="mb-3">
                                <label for="aiRequirements" class="form-label">Tell us what you need:</label>
                                <textarea id="aiRequirements" class="form-control" rows="3"
                                          placeholder="e.g., I need a fuel-efficient car for city driving with 4 seats, budget around $200 per day..."></textarea>
                            </div>
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="button" id="getRecommendation" class="btn btn-primary w-100">
                                <i class="bx bx-search me-2"></i>Get AI Recommendation
                            </button>
                        </div>
                    </div>

                    <!-- AI Recommendation Result -->
                    <div id="aiRecommendation" class="mt-3" style="display: none;">
                        <div class="alert alert-info">
                            <h6><i class="bx bx-lightbulb me-2"></i>AI Recommendation:</h6>
                            <div id="recommendationText"></div>
                        </div>
                    </div>

                    <!-- Recommended Cars List -->
                    <div id="recommendedCarsList" class="mt-3" style="display: none;">
                        <div class="alert alert-success">
                            <h6><i class="bx bx-car me-2"></i>Recommended Cars:</h6>
                            <div id="carsList"></div>
                        </div>
                    </div>

                    <!-- AI Recommendation Summary -->
                    <div id="aiRecommendationSummary" class="mt-3" style="display: none;">
                        <div class="alert alert-warning">
                            <h6><i class="bx bx-info-circle me-2"></i>AI Analysis Summary:</h6>
                            <div id="recommendationSummary"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            var allCars = @Html.Raw(Json.Serialize(Model.Select(c => new
            {
                CarId = c.CarId,
                Brand = c.Brand,
                Model = c.Model,
                ImageUrl = c.ImageUrl,
                ReviewScore = c.ReviewScore,
                DailyPrice = c.DailyPrice,
                SeatCount = c.SeatCount,
                TransmissionType = c.TransmissionType,
                FuelType = c.FuelType,
                ModelYear = c.ModelYear,
                GearType = c.GearType,
                Mileage = c.Mileage,
                IsAvailable = c.IsAvailable
            })));

            $('#getRecommendation').click(function() {
                var requirements = $('#aiRequirements').val().trim();
                if (!requirements) {
                    alert('Please enter your requirements first.');
                    return;
                }
                var button = $(this);
                var originalText = button.html();
                button.html('<i class="bx bx-loader-alt bx-spin me-2"></i>Getting Recommendation...');
                button.prop('disabled', true);

                $.ajax({
                    url: '@Url.Action("GetAIRecommendation")',
                    type: 'POST',
                    data: { requirements: requirements },
                    success: function(response) {
                        if (response.success) {
                            var formattedText = formatAIRecommendationText(response.recommendation);
                            $('#recommendationText').html(formattedText);
                            $('#aiRecommendation').show();

                            var recommendedCars = parseAIRecommendation(response.recommendation);
                            displayRecommendedCarsList(recommendedCars);
                            $('#recommendedCarsList').show();

                            $('#recommendationSummary').html(formattedText);
                            $('#aiRecommendationSummary').show();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while getting the recommendation.');
                    },
                    complete: function() {
                        button.html(originalText);
                        button.prop('disabled', false);
                    }
                });
            });
             // İlk öneri full width/card başlangıç
                       function formatAIRecommendationText(text) {
            var recommendations = text.split(/\d+\.\s/).filter(r => r.trim() !== '');
            var cardsHtml = '';

            // İlk öneri full width
            if (recommendations.length > 0) {
                var firstRec = recommendations[0];
                var firstTitleMatch = firstRec.match(/\*\*([^*]+)\*\*/);
                var firstTitle = firstTitleMatch ? firstTitleMatch[1] : firstRec.split('\n')[0];
                var firstDescription = firstRec.replace(/\*\*([^*]+)\*\*/, '').trim();

                cardsHtml += `
                    <div class="row mb-4">
                        <div class="col-12">
                            <div class="card h-100 shadow-sm">
                                <div class="card-body">
                                    <h5 class="card-title text-primary">${firstTitle}</h5>
                                    <p class="card-text text-muted">
                                        ${firstDescription.replace(/\n/g, '<br>')}
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            }

            // Kalan öneriler 3 sütun
            if (recommendations.length > 1) {
                cardsHtml += '<div class="row">';
                for (var i = 1; i < recommendations.length; i++) {
                    var rec = recommendations[i];
                    var titleMatch = rec.match(/\*\*([^*]+)\*\*/);
                    var title = titleMatch ? titleMatch[1] : rec.split('\n')[0];
                    var description = rec.replace(/\*\*([^*]+)\*\*/, '').trim();

                    cardsHtml += `
                        <div class="col-md-4 mb-4">
                            <div class="card h-100 shadow-sm">
                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title text-primary">${title}</h5>
                                    <p class="card-text text-muted" style="flex-grow:1;">
                                        ${description.replace(/\n/g, '<br>')}
                                    </p>
                                </div>
                            </div>
                        </div>
                    `;
                }
                cardsHtml += '</div>';
            }

            return cardsHtml;
        }



        //Card Bitiş Alanı //

            function parseAIRecommendation(recommendationText) {
                var recommendedCars = [];
                var text = recommendationText.toLowerCase();
                var lines = recommendationText.split('\n');
                var carMatches = [];

                lines.forEach(function(line) {
                    var lineLower = line.toLowerCase();
                    var numberedMatch = lineLower.match(/(\d+)\.\s*([a-z\s]+)/);
                    if (numberedMatch) {
                        var carName = numberedMatch[2].trim();
                        carMatches.push(carName);
                    }
                    var bulletMatch = lineLower.match(/[-•]\s*([a-z\s]+)/);
                    if (bulletMatch) {
                        var carName = bulletMatch[1].trim();
                        carMatches.push(carName);
                    }
                });

                carMatches.forEach(function(carName) {
                    allCars.forEach(function(car) {
                        var brandModel = (car.Brand + ' ' + car.Model).toLowerCase();
                        if (carName.includes(brandModel) || brandModel.includes(carName)) {
                            var exists = recommendedCars.some(function(existing) {
                                return existing.CarId === car.CarId;
                            });
                            if (!exists) {
                                recommendedCars.push(car);
                            }
                        }
                    });
                });

                if (recommendedCars.length === 0) {
                    recommendedCars = allCars
                        .sort(function(a, b) { return b.ReviewScore - a.ReviewScore; })
                        .slice(0, 3);
                }
                return recommendedCars.slice(0, 3);
            }

            function displayRecommendedCarsList(cars) {
                if (cars.length > 0) {
                    var html = '<div class="row">';
                    cars.forEach(function(car, index) {
                        var stars = '';
                        for (var i = 1; i <= 5; i++) {
                            if (i <= car.ReviewScore) {
                                stars += '<i class="bx bxs-star text-warning"></i>';
                            } else if (i - 0.5 <= car.ReviewScore) {
                                stars += '<i class="bx bxs-star-half text-warning"></i>';
                            } else {
                                stars += '<i class="bx bx-star text-muted"></i>';
                            }
                        }
                        var imageHtml = car.ImageUrl ?
                            `<img src="${car.ImageUrl}" class="card-img-top" alt="${car.Brand} ${car.Model}" style="height: 200px; object-fit: cover;">` :
                            `<div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;"><i class="bx bx-car text-muted" style="font-size: 3rem;"></i></div>`;

                        html += `
                            <div class="col-md-6 col-lg-4 mb-4">
                                <div class="card h-100">
                                    ${imageHtml}
                                    <div class="card-body d-flex flex-column">
                                        <h5 class="card-title">${index + 1}. ${car.Brand} ${car.Model}</h5>
                                        <p class="card-text text-muted">${car.ModelYear} Model</p>
                                        <div class="fw-bold text-primary">$${car.DailyPrice.toFixed(2)}</div>
                                        <div class="fw-bold">${stars} <span class="ms-1">${car.ReviewScore.toFixed(1)}</span></div>
                                    </div>
                                </div>
                            </div>
                        `;
                    });
                    html += '</div>';
                    $('#carsList').html(html);
                } else {
                    $('#carsList').html(`<div class="text-center py-3"><i class="bx bx-car text-muted" style="font-size: 2rem;"></i><p class="text-muted mt-2">No specific cars found in AI recommendation.</p></div>`);
                }
            }
        });
    </script>
}
